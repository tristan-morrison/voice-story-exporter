var myDocument = app.documents.item(0);var pubDate = nextFriday();//TODO: need layerArrayvar myDialog = app.dialogs.add({name:"User Interface Example Script", orientation: "column", preferredSize:[500, 500],canCancel:true});with(myDialog){    //Add a dialog column.    with(dialogColumns.add()){        //Create a border panel.        with(borderPanels.add()){            with(dialogColumns.add()){            //The following line shows how to set a property as you create an object.                staticTexts.add({staticLabel:"File Name:"});            }            with(dialogColumns.add()){                //The following line shows how to set multiple properties                //as you create an object.                var initialFieldContents = "VoiceStories_[SECTION_NAME]_" + pubDate.getMonth() + "_" + pubDate.getDate() + "_" + pubDate.getFullYear();                var filenameField = textEditboxes.add({editContents: initialFieldContents, minWidth:300});            }        }        //Category        with(borderPanels.add()){            with(dialogRows.add()){            //The following line shows how to set a property as you create an object.                staticTexts.add({staticLabel:"Section:"});            }            with(dialogRows.add()) {                //Create a pop-up menu ("dropdown") control.                var categoryDropdown = dropdowns.add({stringList:["News", "Features", "Sports", "A&E", "Viewpoints"], selectedIndex:0});            }        }        //Create another border panel.        with(borderPanels.add()){            with(dialogColumns.add()){            //The following line shows how to set a property as you create an object.                staticTexts.add({staticLabel:"Select stories to export:"});            }            with(dialogColumns.add()) {                var checkboxesArray = new Array();                for (k = 0; k < myDocument.layers.length; k++) {                    var currentCheckbox = checkboxControls.add({staticLabel: myDocument.layers[k].name});                    checkboxesArray.push(currentCheckbox);                }            }        }    }}var myResult = myDialog.show();if(myResult == true){        var exportFolder = Folder.selectDialog();}//process strings to get path to new filevar exportFolderString = exportFolder.toString();var newFilename = "/" + encodeURI(filenameField.editContents) + ".xml";var fullPath = exportFolderString + newFilename;var layerArray = new Array();for (k = 0; k < myDocument.layers.length; k++) {    if (checkboxesArray[k].checkedState == true) {        layerArray.push(checkboxesArray[k].staticLabel);    }}var category = categoryDropdown.stringList[categoryDropdown.selectedIndex];exportAll(fullPath, category, layerArray);//export all storiesfunction exportAll(fullPath, category, layerArray) {	var rootElement = myDocument.xmlElements.item(0);		var rssElement = rssElementSetup(rootElement);		var channelElement = channelElementSetup(rssElement, category, layerArray);	    //MARK: Delete this	/*var myTextFrame = myDocument.pages.item(0).textFrames.add();	myTextFrame.geometricBounds = ["6p", "6p", "24p", "24p"];	myTextFrame.contents = fullPath;*/        rssElement.exportFile(ExportFormat.xml, File(fullPath));	}function rssElementSetup(parentElement) { //add rss element and set up attributes	var rssElement = parentElement.xmlElements.add("rss");	var rssAttributes = rssElement.xmlAttributes;	rssAttributes.add("xmlns:excerpt","http://wordpress.org/export/1.2/excerpt/");	rssAttributes.add("xmlns:content","http://purl.org/rss/1.0/modules/content/");	rssAttributes.add("xmlns:wfw","http://wellformedweb.org/CommentAPI/");	rssAttributes.add("xmlns:dc","http://purl.org/dc/elements/1.1/");	rssAttributes.add("xmlns:wp","http://wordpress.org/export/1.2/");		return rssElement;}function channelElementSetup(parentElement, category, layerArray) { //add channel element and static children	var channelElement = parentElement.xmlElements.add("channel");	var channelElements = channelElement.xmlElements;		var titleElem = channelElements.add("title");		titleElem.contents = "The Wooster Voice";	var linkElem = channelElements.add("link");		linkElem.contents = "http://thewoostervoice.spaces.wooster.edu";	var descriptionElem = channelElements.add("description");		descriptionElem.contents = "The Official Student Newspaper of The College of Wooster since 1883";	var pubDateElem = channelElements.add("pubDate");		pubDateElem.contents = "Tue, 16 Feb 2016 21:45:17 +0000"; //TEMP EXAMPLE VALUE	var languageElem = channelElements.add("language");		languageElem.contents = "en-US";	var wpVersionElem = channelElements.add("wp:wxr_version");		wpVersionElem.contents = "1.2"; //hard-coded dynamic	var baseSiteUrlElem = channelElements.add("wp:base_site_url");		baseSiteUrlElem.contents = "http://spaces.wooster.edu/"; //hard-coded dynamic	var baseBlogUrlElem = channelElements.add("wp:base_blog_url");		baseBlogUrlElem.contents = "http://thewoostervoice.spaces.wooster.edu"; //hard-coded dynamic	    //Author element    var wpAuthorElem = wpAuthorElementSetup(channelElement);        //Item element    for (k = 0; k < layerArray.length; k++) {        itemElementSetup(channelElement, category, layerArray[k]);    }		return channelElement;	}function wpAuthorElementSetup(parentElement) {	var authorElement = parentElement.xmlElements.add("wp:author");		var authorElements = authorElement.xmlElements;		var idElem = authorElements.add("wp:author_id");		idElem.contents = "996"; //hard-coded dynamic	var loginElem = authorElements.add("wp:author_login");		loginElem.contents = "CDATA_BEGIN_REPLACE_WITH_TAGtlopus18CDATA_END_REPLACE_WITH_TAG"; //hard-coded dynamic	var emailElem = authorElements.add("wp:author_email");		emailElem.contents = "CDATA_BEGIN_REPLACE_WITH_TAGtlopus18@wooster.eduCDATA_END_REPLACE_WITH_TAG"; //hard-coded dynamic	var displayNameElem = authorElements.add("wp:author_display_name");		displayNameElem.contents = "CDATA_BEGIN_REPLACE_WITH_TAGTristan LopusCDATA_END_REPLACE_WITH_TAG"; //hard-coded dynamic	var fNameElem = authorElements.add("wp:author_first_name");		fNameElem.contents = "CDATA_BEGIN_REPLACE_WITH_TAGTristanCDATA_END_REPLACE_WITH_TAG"; //hard-coded dynamic	var lNameElem = authorElements.add("wp:author_last_name");		lNameElem.contents = "CDATA_BEGIN_REPLACE_WITH_TAGLopusCDATA_END_REPLACE_WITH_TAG"; //hard-coded dynamic		return authorElement;}function itemElementSetup(parentElement, category, layerName) {    var currentLayer = myDocument.layers.itemByName(layerName); //TODO: update to set to layerIndex        var itemElement = parentElement.xmlElements.add("item");    var itemElements = itemElement.xmlElements;        //Set title    var headlineFrameText = currentLayer.textFrames.itemByName("Headline").contents;    var titleElem = itemElements.add("title");    titleElem.contents = headlineFrameText;        //Set link    var headlineTextFormatted = headlineFrameText.toLowerCase().replace(/ /g, "-");    var linkElem = itemElements.add("link");    linkElem.contents = headlineTextFormatted;        //Set pubDate    var dateObj = new Date();    var dateString = dateObj.toUTCString();    var pubDateElem = itemElements.add("pubDate");    pubDateElem.contents = dateString;        //Set creator    var creatorElem = itemElements.add("dc:creator");    creatorElem.contents = "CDATA_BEGIN_REPLACE_WITH_TAGtlopus18CDATA_END_REPLACE_WITH_TAG"; //hard-coded dynamic        //empty guid    itemElements.add("guid");        //empty description    itemElements.add("description");        //--content    var contentElement = itemElements.add("content:encoded");    var contentElements = contentElement.xmlElements;    //subheadline    if (currentLayer.textFrames.itemByName("Subheadline") != null) {        var subheadlineStrongElem = contentElements.add("strong");        var subheadlineEmElem = subheadlineStrongElem.xmlElements.add("em");        subheadlineEmElem.contents = currentLayer.textFrames.itemByName("Subheadline").contents;        subheadlineStrongElem.insertTextAsContent("\r\r", XMLElementPosition.AFTER_ELEMENT);    }    //byline    if (currentLayer.textFrames.itemByName("Byline") != null) {       var bylineAuthorElem = contentElements.add("strong");       bylineAuthorElem.contents = currentLayer.textFrames.itemByName("Byline").lines.item(0).contents.replace("\r", "");       var bylineTitleElem = contentElements.add("em"); //TODO: fix, use diff unit instead of lines       bylineTitleElem.contents = currentLayer.textFrames.itemByName("Byline").lines.item(1).contents;              bylineAuthorElem.insertTextAsContent("\n", XMLElementPosition.AFTER_ELEMENT);       bylineTitleElem.insertTextAsContent("\n\n", XMLElementPosition.AFTER_ELEMENT);    }    //body copy    var bodyTextString = "";    var bodyTextFrame = currentLayer.textFrames.itemByName("Body");    do {        bodyTextString = bodyTextString + bodyTextFrame.contents;        bodyTextFrame = bodyTextFrame.nextTextFrame;    } while (bodyTextFrame != null);    bodyTextString = bodyTextString.replace(/\r/g, "\r\r");    contentElement.insertTextAsContent("CDATA_BEGIN_REPLACE_WITH_TAG", XMLElementPosition.ELEMENT_START);    contentElement.insertTextAsContent(bodyTextString, XMLElementPosition.ELEMENT_END);    if (currentLayer.textFrames.itemByName("Appendix") != null) {        var appendixElem = contentElements.add("em");        appendixElem.contents = currentLayer.textFrames.itemByName("Appendix").contents;                appendixElem.insertTextAsContent("\n\n", XMLElementPosition.BEFORE_ELEMENT);    }        contentElement.insertTextAsContent("CDATA_END_REPLACE_WITH_TAG", XMLElementPosition.ELEMENT_END);        //empty excerpt    itemElements.add("excerpt:encoded");        //empty post_id    itemElements.add("wp:post_id");        //post date    var postDate = nextFriday();    var postDateElem = itemElements.add("wp:post_date");    postDateElem.contents = dateToFormattedStringLocal(postDate);        //post date gmt    var postDateGMT = nextFriday();    var postDateGMTElem = itemElements.add("wp:post_date_gmt");    postDateGMTElem.contents = dateToFormattedStringGMT(postDateGMT);        //comment status    var commentStatusElem = itemElements.add("wp:comment_status");    commentStatusElem.contents = "open";        //ping status    var pingStatusElem = itemElements.add("wp:ping_status");    pingStatusElem.contents = "closed";        //post_name    var postNameElem = itemElements.add("wp:post_name");    postNameElem.contents = headlineFrameText.toLowerCase().replace(/ /g, "-");        //status    var statusElem = itemElements.add("wp:status");    statusElem.contents = "future";        //post_parent    var postParentElem = itemElements.add("wp:post_parent");    postParentElem.contents = '0';        //menu order    var menuOrderElem = itemElements.add("wp:menu_order");    menuOrderElem.contents = '0';        //post type    var postTypeElem = itemElements.add("wp:post_type");    postTypeElem.contents = "post";        //empty post password    itemElements.add("wp:post_password");        //is sticky    var isStickyElem = itemElements.add("wp:is_sticky");    isStickyElem.contents = '0';        //category    if (category == "A&E") {        var categoryCode = "arts"        category = "Arts & Entertainment";    }    else {        var categoryCode = category.toLowerCase();    }    var categoryElem = itemElements.add("category");    categoryElem.xmlAttributes.add("domain", "category");    categoryElem.xmlAttributes.add("nicename", categoryCode);    categoryElem.contents = category;        return itemElement;}//from CK on Bytes.comfunction nextFriday() {    var d = new Date();    switch (d.getDay()) {        case 0: d.setDate(d.getDate() + 5);        break;        case 1: d.setDate(d.getDate() + 4);        break;        case 2: d.setDate(d.getDate() + 3);        break;        case 3: d.setDate(d.getDate() + 2);        break;        case 4: d.setDate(d.getDate() + 1);        break;        case 6: d.setDate(d.getDate() + 6);        break;   }return d;}function dateToFormattedStringLocal(dateToFormat) {    var month = dateToFormat.getUTCMonth() + 1;    if (month < 10) {        var monthString = "0" + month;    } else {        var monthString = month;    }    var dateString = dateToFormat.getFullYear() + "-" + monthString + "-" + dateToFormat.getUTCDate() + " " + "10:00:00";    return dateString;}function dateToFormattedStringGMT(dateToFormat) {    var month = dateToFormat.getUTCMonth() + 1;    if (month < 10) {        var monthString = "0" + month;    } else {        var monthString = month;    }    var dateString = dateToFormat.getFullYear() + "-" + monthString + "-" + dateToFormat.getUTCDate() + " " + "14:00:00";    return dateString;}